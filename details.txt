For the given work, I applied various programming skills, particularly in Java and Swing GUI development, to create an interactive banking system with a user-friendly interface.
I started by designing the core logic of the banking system, encapsulating data and operations in classes such as `BankAccount` and `BankSystem`. The `BankAccount` class manages individual account balances and ensures thread safety using synchronization blocks, which is essential when multiple users are accessing or modifying shared resources.To record transactions, I created a `TransactionLogger` class that logs all deposit and withdrawal operations. I employed file handling techniques and ensured thread safety by synchronizing the logging process.The graphical user interface (GUI) was developed using Java Swing. I structured the interface in a user-friendly layout with buttons for different banking operations such as deposit, withdrawal, and balance checking. I used `GridBagLayout` to create a clean and organized interface, showing my knowledge of Java Swing layouts.One key feature of the project is the use of separate threads for checking account balances, preventing the GUI from freezing during long-running tasks.Overall, this project showcases my skills in object-oriented programming, multithreading, concurrency control, and GUI development, all of which are essential for building a robust banking system.